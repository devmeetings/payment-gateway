extends ../angular-layout.jade

block content
  .container(ng-app="invoices")
    .row(ng-controller="InvoicesCtrl")
      .col-xs-12
        a.pull-right(
            ng-click="showOrder = !showOrder"
          )
          | Show Order Id
        h1 Invoices
        .well.clearfix
          form.pull-left(action, method="POST")
            .form-group
              label(for="prefix") Set invoiceNo prefix for invoices for current event (prefix should end with / char, if not it will be added)
              input.form-control(type="text", id="prefix", name="invoicePrefix", required)
            button.btn.btn-default(type="submit", name="prefix") Save prefix
          form.pull-right(action, method="POST")
            button.btn.btn-primary(type="submit", name="reset") Reset numbers in invoices for current event
        .well.clearfix
          .form-group
            .pull-right
              a(ng-click="view.detailed = !view.detailed") Toggle Detailed View
          .form-group
            input.form-control(type="text", ng-model="search.$", placeholder="Search")
          .form-group
            button.btn.btn-primary(download-invoice, compose) Get invoices
        .row(ng-if="!view.detailed")
          table.table
            tr
              th Date of invoice
              th Invoice No
              th Buyer name
              th Recipient name
              th Event name
              th Amount
            tr(ng-repeat="in in invoices | filter:search | orderBy:[in.invoice.deliveryDate, in.claim.event.title]:true")
              td {{in.invoice.dateOfInvoice}}
              td {{in.invoice.invoiceNo}}
              td {{in.buyer.firstName }} {{ in.buyer.lastName }} {{ in.buyer.names }}
              td {{in.buyer.invoice.recipientName }}
              td {{in.claim.event.title}}
              td {{ in.totalAmount / 100 | currency: '' }} {{in.currencyCode}}
        .well.clearfix(ng-repeat="in in invoices", ng-if="view.detailed")
          form.invoices.form-horizontal
            .row
              .col-xs-6
                .form-group(ng-show="showOrder")
                  label.col-sm-4.control-label OrderId:
                  .col-sm-8
                      p.form-control-static {{ in.orderId }}
                .form-group
                  label.col-sm-4.control-label Amount / Status:
                  .col-sm-8
                    p.form-control-static {{ in.totalAmount / 100 | currency: '' }} {{in.currencyCode}} / {{ in.status }}
                .form-group
                  label.col-sm-4.control-label Name / Email:
                  .col-sm-8
                    p.form-control-static {{ in.buyer.firstName }} {{ in.buyer.lastName }} {{ in.buyer.names }} / {{ in.buyer.email}}
                .form-group(ng-show="!in.paidWithoutPayu")
                  label.col-sm-4.control-label Invoice:
                  .col-sm-8
                    p.form-control-static {{ in.buyer.invoice.recipientName }}
                      br
                      | {{ in.buyer.invoice.street }}
                      br
                      | {{ in.buyer.invoice.postalCode }} {{ in.buyer.invoice.city }} ({{ in.buyer.invoice.countryCode }})
                      br
                      | NIP: {{ in.buyer.invoice.tin }}
              .col-xs-6(on-change-invoice-data="{{in.orderId}}")
                .form-group
                  label.col-sm-5.control-label Invoice No:
                  .col-sm-7
                    input.form-control(type="text",name="invoiceNo",ng-model="in.invoice.invoiceNo")
                .form-group
                  label.col-sm-5.control-label Date of invoice:
                  .col-sm-7
                    input.form-control(ng-model="in.invoice.dateOfInvoice", name="dateOfInvoice", type="text")
                .form-group
                  label.col-sm-5.control-label Delivery date:
                  .col-sm-7
                    input.form-control(ng-model="in.invoice.deliveryDate", name="deliveryDate", type="text")
                .form-group
                  label.col-sm-5.control-label Date of payment:
                  .col-sm-7
                    input.form-control(ng-model="in.invoice.dateOfPayment",name="dateOfPayment", type="text")
                .form-group(ng-show="in.paidWithoutPayu")
                  label.col-sm-5.control-label Recipient name:
                  .col-sm-7
                    input.form-control(ng-model="in.buyer.invoice.recipientName",name="recipientName", type="text")
                .form-group(ng-show="in.paidWithoutPayu")
                  label.col-sm-5.control-label Street:
                  .col-sm-7
                    input.form-control(ng-model="in.buyer.invoice.street",name="street", type="text")
                .form-group(ng-show="in.paidWithoutPayu")
                  label.col-sm-5.control-label Postal code:
                  .col-sm-7
                    input.form-control(ng-model="in.buyer.invoice.postalCode",name="postalCode", type="text")
                .form-group(ng-show="in.paidWithoutPayu")
                  label.col-sm-5.control-label City:
                  .col-sm-7
                    input.form-control(ng-model="in.buyer.invoice.city",name="city", type="text")
                 .form-group(ng-show="in.paidWithoutPayu")
                  label.col-sm-5.control-label TIN:
                  .col-sm-7
                    input.form-control(ng-model="in.buyer.invoice.tin",name="tin", type="text")
                .form-group
                  .col-sm-7.col-sm-offset-5
                    button.btn.btn-primary(download-invoice) Get invoice
append scripts
  script.
    angular.module('invoices', []).factory('InvoiceService',function($http, $filter){
      return {
        updateInvoice: updateInvoice,
        getInvoice: getInvoice,
        getInvoices: getInvoices
      };

      function getInvoices(array, title) {
        var invoices = $filter('filter')(array, title);

        if (invoices.length > 0) {
          downloadInvoice(invoices);
        }
        else {
          alert('Please write correct event title');
        }

      }

      function getInvoice(data) {
          downloadInvoice(data);
      }

      function downloadInvoice(data){
        $http.post('/admin/claims/get/invoice', data, {responseType: 'blob'}).then(function (response) {
          var regEx = response.headers('Content-Disposition').match(/filename="([^"]*)"/);
          var fileName = regEx[1];
          download(response.data, fileName, 'application/pdf');
        });
      }

      function updateInvoice (data) {
            $http.post('/admin/claims/invoice/', data);
      };
    }).directive('downloadInvoice', function (InvoiceService){
      return {
        restrict: 'A',
        link: function (scope, element, attrs) {
            element.on('click', function (){


                if (attrs.hasOwnProperty('compose')) {
                  if (scope.search) {
                    InvoiceService.getInvoices(scope.invoices, scope.search.$);
                  }
                  else
                  {
                    alert('Please write event title');
                  }

                }
                else {
                  InvoiceService.getInvoice(scope.in);
                }


            });
        }
      };
    }).directive('onChangeInvoiceData',function(InvoiceService){
        return {
          restrict: 'A',
          link: function(scope, el, attr) {
            el.find('input').on('blur', function () {

              var invoiceData = {
                payment: attr['onChangeInvoiceData']
              };
              el.find('input').each(function(idx, input) {
                var $input = $(input);
                invoiceData[$input.attr('name')] = $input.val();
              });

              InvoiceService.updateInvoice(invoiceData);
            })
        }
      };
    }).controller('InvoicesCtrl', function($scope) {
      $scope.invoices =!{invoices};

      $scope.updateInvoiceData = function(invoice){
        console.log(invoice);
      }
    });
