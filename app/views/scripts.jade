// Facebook Pixel Code
script.
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window,document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
   fbq('init', '1593771610884180'); 
  fbq('track', 'PageView');
noscript
  img(height="1", width="1", src="https://www.facebook.com/tr?id=1593771610884180&ev=PageView&noscript=1")

script(src='http://localhost:35729/livereload.js')
script(src='/components/jquery/dist/jquery.js')
script(src='/components/bootstrap/dist/js/bootstrap.js')
script(src='/components/highlightjs/highlight.pack.js')
script(src='/components/fitvids/jquery.fitvids.js')
script(async).
  hljs.initHighlightingOnLoad();
  $(function(){
    $('.videos').fitVids();
  });
  $(function() {
    $(window).on("load resize", function() {
      if($(window).width() > 767) {
        sameHeight(".box", ".photostory-holder", true);
        sameHeight(".box", ".box-group", true);
        sameHeight(".box", ".workshop-holder", true);
        sameHeight(".box, .offer-or", ".offer-holder", true);
      }
    });
    $(window).scroll(function () {
      if($(window).scrollTop() > 100) {
          $("body").addClass("fixed");
        } else {
          $("body").removeClass("fixed");
        }
    });
    /* EMAILE */
    var names = ["info", "piotr", "tomek", "sponsoring", "trener", "locations", "piotr.zwolinski", "wspolpraca", "salki", "cooperation", "trainer", "venue"];
    var domains = ["devmeetings.org", "devmeetings.com", "devmeetings.de", "devmeetings.pl"];
    $(".mailaddress").each(function() {
      makeEmail($(this));
    });
  });
  
  function makeEmail(element) {
    var name = element.attr("data-name");
    var domain = element.attr("data-domain");
    element.html('<a href="mailto:' + name + '@' + domain + '">' + name + '@' + domain + '</a>');
  }

  function sameHeight(blocks, parent, outer) {
    var i = 0;
    var maxVal;
    if(parent == null) {
      parent = "body";
    } 
    
    jQuery(blocks).parents(parent).each(function() {
    
      maxVal = 0;
      
      jQuery(this).find(blocks).each(function() {
        if(i == 0) {
          if(outer) {
            maxVal = jQuery(this).outerHeight();
          } else {
            maxVal = jQuery(this).height();
          }
        } else {
          if(jQuery(this).outerHeight() > maxVal) {
            if(outer) {
              maxVal = jQuery(this).outerHeight();
            } else {
              maxVal = jQuery(this).height();
            }
          }
        }
        i++;
      });
      
      jQuery(this).find(blocks).each(function() {
        if(outer) {
          jQuery(this).css("min-height", maxVal + "px");
        } else {
          jQuery(this).css("min-height", maxVal + "px");
        }
      });
      
    });
    
  }
